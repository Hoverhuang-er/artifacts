name: CI for Release Charts

on:
  push:
    paths:
      - 'README.md'
    branches:
      - main
    tags:
      - "v*.*.*"
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *' # every day at midnight

permissions: {}

jobs:
  codeowners:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: install yq
        run: |
          sudo snap install yq
      - name: generate CODEOWNERS
        run: |
          ./scripts/check-codeowners.sh > .github/CODEOWNERS
  linter:
    name: Lint Code Base
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Lint Code Base
        uses: docker://github/super-linter:v3.12.0
        env:
          FILTER_REGEX_EXCLUDE: .*(README\.md|Chart\.yaml|NOTES.txt).*
          FILTER_REGEX_INCLUDE: ${{ inputs.filter_regex_include }}
          VALIDATE_ALL_CODEBASE: false
          VALIDATE_KUBERNETES_KUBEVAL: false
          VALIDATE_YAML: false
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  release:
    permissions:
      contents: write # to push chart release and create a release (helm/chart-releaser-action)
      packages: write # needed for ghcr access
    needs:
      - linter
      - codeowners
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Set up Helm
        uses: azure/setup-helm@v3.5
        with:
          version: v3.12.0
      - name: Packaging chart
        run: |
          helm package charts/* --destination .cr-release-packages
          helm index .cr-release-packages --url https://hoverhuang.github.io/helm-charts/
      - name: Add dependency chart repos
        run: |
          helm repo add elastic https://helm.elastic.co
          helm repo add codeserver https://hoverhuang.github.io/helm-charts/

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.5.0
        with:
          charts_dir: charts
          config: cr.yaml
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          CR_SKIP_EXISTING: "true"

      - name: Push charts to GHCR
        run: |
          shopt -s nullglob
          for pkg in .cr-release-packages/*; do
            if [ -z "${pkg:-}" ]; then
              break
            fi
            if ! helm push "${pkg}" "oci://ghcr.io/${GITHUB_REPOSITORY_OWNER}/charts"; then
              echo '::warning:: helm push failed!'
            fi
          done
  sync_readme:
    permissions:
      contents: write # for git push
    needs:
      - release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: |
          cp -f README.md ${{ runner.temp }}/README.md
      - uses: actions/checkout@v2
        with:
          ref: gh-pages
      - run: |
          cp -f ${{ runner.temp }}/README.md .
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
          git add README.md
          git commit --signoff -m "Sync README from main"
          git push